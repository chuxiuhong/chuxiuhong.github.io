<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on 唯心不易</title><link>http://chuxiuhong.com/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on 唯心不易</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 15 Apr 2021 23:26:22 +0800</lastBuildDate><atom:link href="http://chuxiuhong.com/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>衡量轨迹相似度算法</title><link>http://chuxiuhong.com/post/trajectory-distance/</link><pubDate>Thu, 15 Apr 2021 23:26:22 +0800</pubDate><guid>http://chuxiuhong.com/post/trajectory-distance/</guid><description>这篇文章内容主要是来源于[1]这篇文章，这篇文章主要是一篇对衡量轨迹之间相似度的综述论文，在此我总结一下提一提干货。 概念 轨迹采样点：轨迹采样</description></item><item><title>RSA加解密实现</title><link>http://chuxiuhong.com/post/rsa/</link><pubDate>Wed, 26 Apr 2017 22:52:37 +0800</pubDate><guid>http://chuxiuhong.com/post/rsa/</guid><description>RSA是由MIT的三位数学家R.L.Rivest，A.Shamir和L.Adleman[Rivest等1978, 1979]提出的一种用数论构</description></item><item><title>卷积神经网络提取特征并用于SVM</title><link>http://chuxiuhong.com/post/cnn-svm/</link><pubDate>Mon, 05 Dec 2016 09:58:20 +0800</pubDate><guid>http://chuxiuhong.com/post/cnn-svm/</guid><description>目标是对UCI的手写数字数据集进行识别，样本数量大约是1600个。图片大小为16x16。要求必须使用SVM作为二分类的分类器。 本文重点是如何</description></item><item><title>银行家算法学习笔记</title><link>http://chuxiuhong.com/post/banker-algo/</link><pubDate>Sat, 26 Nov 2016 12:41:20 +0800</pubDate><guid>http://chuxiuhong.com/post/banker-algo/</guid><description>死锁避免——银行家算法的应用背景 要想说银行家，首先得说死锁问题，因为银行家算法就是为了死锁避免提出的。那么，什么是死锁？简单的举个例子：俩人</description></item><item><title>听歌识曲--用python实现一个音乐检索器</title><link>http://chuxiuhong.com/post/shazam/</link><pubDate>Mon, 14 Nov 2016 21:51:20 +0800</pubDate><guid>http://chuxiuhong.com/post/shazam/</guid><description>听歌识曲，顾名思义，用设备“听”歌曲，然后它要告诉你这是首什么歌。而且十之八九它还得把这首歌给你播放出来。这样的功能在QQ音乐等应用上早就出</description></item><item><title>用python实现逻辑回归</title><link>http://chuxiuhong.com/post/python-logistic/</link><pubDate>Wed, 02 Nov 2016 13:04:20 +0800</pubDate><guid>http://chuxiuhong.com/post/python-logistic/</guid><description>机器学习课程的一个实验，整理出来共享。 原理很简单，优化方法是用的梯度下降。后面有测试结果。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description></item><item><title>利用KD树进行异常检测</title><link>http://chuxiuhong.com/post/kd-tree/</link><pubDate>Wed, 26 Oct 2016 19:41:20 +0800</pubDate><guid>http://chuxiuhong.com/post/kd-tree/</guid><description>什么是KD树 要说KD树，我们得先说一下什么是KNN算法。 KNN是k-NearestNeighbor的简称，原理很简单：当你有一堆已经标注好的</description></item><item><title>用python实现最长公共子序列算法(找到所有最长公共子串)</title><link>http://chuxiuhong.com/post/python-lcs-algo/</link><pubDate>Sat, 08 Oct 2016 19:03:20 +0800</pubDate><guid>http://chuxiuhong.com/post/python-lcs-algo/</guid><description>软件安全的一个小实验，正好复习一下LCS的写法。 实现LCS的算法和算法导论上的方式基本一致，都是先建好两个表，一个存储在(i,j)处当前最长</description></item></channel></rss>