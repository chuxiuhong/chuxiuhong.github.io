<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on 唯心不易</title><link>http://chuxiuhong.com/tags/python/</link><description>Recent content in Python on 唯心不易</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 11 Aug 2017 06:43:20 +0800</lastBuildDate><atom:link href="http://chuxiuhong.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>100行实现草榴种子爬虫</title><link>http://chuxiuhong.com/post/spider-caoliu/</link><pubDate>Fri, 11 Aug 2017 06:43:20 +0800</pubDate><guid>http://chuxiuhong.com/post/spider-caoliu/</guid><description>本来这个技术含量不足以写进博客的，不过想想好久不写博客都快把markdown语法忘了（汗颜），之前做的信安比赛的项目未来会写一篇总结。 代码比</description></item><item><title>彩色和灰度图片直方图均衡化</title><link>http://chuxiuhong.com/post/pic-his/</link><pubDate>Fri, 19 May 2017 23:58:32 +0800</pubDate><guid>http://chuxiuhong.com/post/pic-his/</guid><description>直方图均衡化是对于一幅图像，其具有多个灰度等级的像素，我们尽可能让这些灰度等级出现频率的概率密度函数趋近于常数。这么做的意义在哪里？当一幅图</description></item><item><title>基于django做HTTP代理服务器</title><link>http://chuxiuhong.com/post/django-http-proxy/</link><pubDate>Sun, 07 May 2017 08:19:37 +0800</pubDate><guid>http://chuxiuhong.com/post/django-http-proxy/</guid><description>这个项目实现了： a) 网站过滤：允许/不允许访问某些网站； b) 用户过滤：支持/不支持某些用户访问外部网站； c) 网站引导：将用户对某个网站的访问引导至</description></item><item><title>RSA加解密实现</title><link>http://chuxiuhong.com/post/rsa/</link><pubDate>Wed, 26 Apr 2017 22:52:37 +0800</pubDate><guid>http://chuxiuhong.com/post/rsa/</guid><description>RSA是由MIT的三位数学家R.L.Rivest，A.Shamir和L.Adleman[Rivest等1978, 1979]提出的一种用数论构</description></item><item><title>用树莓派从零开始做一个家庭监控</title><link>http://chuxiuhong.com/post/shumeipai/</link><pubDate>Mon, 19 Dec 2016 09:14:20 +0800</pubDate><guid>http://chuxiuhong.com/post/shumeipai/</guid><description>先说好，我们的家庭监控是每分钟的照片的监控，并不是真正的实时视频，这种实时视频树莓派性能可能不够。 我们这一次工程的大体步骤： 硬件准备 我们至少</description></item><item><title>卷积神经网络提取特征并用于SVM</title><link>http://chuxiuhong.com/post/cnn-svm/</link><pubDate>Mon, 05 Dec 2016 09:58:20 +0800</pubDate><guid>http://chuxiuhong.com/post/cnn-svm/</guid><description>目标是对UCI的手写数字数据集进行识别，样本数量大约是1600个。图片大小为16x16。要求必须使用SVM作为二分类的分类器。 本文重点是如何</description></item><item><title>不到一百行实现一个命令词识别</title><link>http://chuxiuhong.com/post/minglingci/</link><pubDate>Fri, 02 Dec 2016 09:19:20 +0800</pubDate><guid>http://chuxiuhong.com/post/minglingci/</guid><description>想要容易理解核心的特征计算的话建议先去看看我之前的听歌识曲的文章，传送门:https://chuxiuhong.com/post/shaza</description></item><item><title>银行家算法学习笔记</title><link>http://chuxiuhong.com/post/banker-algo/</link><pubDate>Sat, 26 Nov 2016 12:41:20 +0800</pubDate><guid>http://chuxiuhong.com/post/banker-algo/</guid><description>死锁避免——银行家算法的应用背景 要想说银行家，首先得说死锁问题，因为银行家算法就是为了死锁避免提出的。那么，什么是死锁？简单的举个例子：俩人</description></item><item><title>听歌识曲--用python实现一个音乐检索器</title><link>http://chuxiuhong.com/post/shazam/</link><pubDate>Mon, 14 Nov 2016 21:51:20 +0800</pubDate><guid>http://chuxiuhong.com/post/shazam/</guid><description>听歌识曲，顾名思义，用设备“听”歌曲，然后它要告诉你这是首什么歌。而且十之八九它还得把这首歌给你播放出来。这样的功能在QQ音乐等应用上早就出</description></item><item><title>用python实现逻辑回归</title><link>http://chuxiuhong.com/post/python-logistic/</link><pubDate>Wed, 02 Nov 2016 13:04:20 +0800</pubDate><guid>http://chuxiuhong.com/post/python-logistic/</guid><description>机器学习课程的一个实验，整理出来共享。 原理很简单，优化方法是用的梯度下降。后面有测试结果。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description></item><item><title>利用KD树进行异常检测</title><link>http://chuxiuhong.com/post/kd-tree/</link><pubDate>Wed, 26 Oct 2016 19:41:20 +0800</pubDate><guid>http://chuxiuhong.com/post/kd-tree/</guid><description>什么是KD树 要说KD树，我们得先说一下什么是KNN算法。 KNN是k-NearestNeighbor的简称，原理很简单：当你有一堆已经标注好的</description></item><item><title>用python实现最长公共子序列算法(找到所有最长公共子串)</title><link>http://chuxiuhong.com/post/python-lcs-algo/</link><pubDate>Sat, 08 Oct 2016 19:03:20 +0800</pubDate><guid>http://chuxiuhong.com/post/python-lcs-algo/</guid><description>软件安全的一个小实验，正好复习一下LCS的写法。 实现LCS的算法和算法导论上的方式基本一致，都是先建好两个表，一个存储在(i,j)处当前最长</description></item><item><title>基于傅里叶变换和PyQt4开发一个简单的频率计数器</title><link>http://chuxiuhong.com/post/fft-pyqt4/</link><pubDate>Tue, 27 Sep 2016 21:52:20 +0800</pubDate><guid>http://chuxiuhong.com/post/fft-pyqt4/</guid><description>小学期的《信号与系统》课，要求写一个频率计数器，下面是我个人理解的频率计数 傅里叶变换的代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>Python 正则表达式入门（中级篇）</title><link>http://chuxiuhong.com/post/python-re-intro-2/</link><pubDate>Sun, 25 Sep 2016 23:09:20 +0800</pubDate><guid>http://chuxiuhong.com/post/python-re-intro-2/</guid><description>初级篇链接：https://chuxiuhong.com/post/python-re-intro-1/ 上一篇我们说在这一篇里，我们会介绍子</description></item><item><title>Python 正则表达式入门（初级篇）</title><link>http://chuxiuhong.com/post/python-re-intro-1/</link><pubDate>Mon, 19 Sep 2016 02:33:20 +0800</pubDate><guid>http://chuxiuhong.com/post/python-re-intro-1/</guid><description>本文主要为没有使用正则表达式经验的新手入门所写。 转载请写明出处 引子 首先说 正则表达式是什么？ 正则表达式，又称正规表示式、正规表示法、正规表达式</description></item></channel></rss>